{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"state\",\"descriptors\",\"dimensions\",\"insets\",\"style\"];import{MissingIcon}from'@react-navigation/elements';import{CommonActions,NavigationContext,NavigationRouteContext,useLinkBuilder,useTheme}from'@react-navigation/native';import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useSafeAreaFrame}from'react-native-safe-area-context';import BottomTabBarHeightCallbackContext from'../utils/BottomTabBarHeightCallbackContext';import useIsKeyboardShown from'../utils/useIsKeyboardShown';import BottomTabItem from'./BottomTabItem';const DEFAULT_TABBAR_HEIGHT=49;const COMPACT_TABBAR_HEIGHT=32;const DEFAULT_MAX_TAB_ITEM_WIDTH=125;const useNativeDriver=false;const shouldUseHorizontalLabels=_ref=>{let{state,descriptors,layout,dimensions}=_ref;const{tabBarLabelPosition}=descriptors[state.routes[state.index].key].options;if(tabBarLabelPosition){switch(tabBarLabelPosition){case'beside-icon':return true;case'below-icon':return false;}}if(layout.width>=768){const maxTabWidth=state.routes.reduce((acc,route)=>{const{tabBarItemStyle}=descriptors[route.key].options;const flattenedStyle=StyleSheet.flatten(tabBarItemStyle);if(flattenedStyle){if(typeof flattenedStyle.width==='number'){return acc+flattenedStyle.width;}else if(typeof flattenedStyle.maxWidth==='number'){return acc+flattenedStyle.maxWidth;}}return acc+DEFAULT_MAX_TAB_ITEM_WIDTH;},0);return maxTabWidth<=layout.width;}else{return dimensions.width>dimensions.height;}};const getPaddingBottom=insets=>Math.max(insets.bottom-0,0);export const getTabBarHeight=_ref2=>{var _StyleSheet$flatten;let{state,descriptors,dimensions,insets,style}=_ref2,rest=_objectWithoutPropertiesLoose(_ref2,_excluded);const customHeight=(_StyleSheet$flatten=StyleSheet.flatten(style))===null||_StyleSheet$flatten===void 0?void 0:_StyleSheet$flatten.height;if(typeof customHeight==='number'){return customHeight;}const isLandscape=dimensions.width>dimensions.height;const horizontalLabels=shouldUseHorizontalLabels(Object.assign({state,descriptors,dimensions},rest));const paddingBottom=getPaddingBottom(insets);if(false&&!Platform.isPad&&isLandscape&&horizontalLabels){return COMPACT_TABBAR_HEIGHT+paddingBottom;}return DEFAULT_TABBAR_HEIGHT+paddingBottom;};export default function BottomTabBar(_ref3){let{state,navigation,descriptors,insets,style}=_ref3;const{colors}=useTheme();const buildLink=useLinkBuilder();const focusedRoute=state.routes[state.index];const focusedDescriptor=descriptors[focusedRoute.key];const focusedOptions=focusedDescriptor.options;const{tabBarShowLabel,tabBarHideOnKeyboard=false,tabBarVisibilityAnimationConfig,tabBarStyle,tabBarBackground,tabBarActiveTintColor,tabBarInactiveTintColor,tabBarActiveBackgroundColor,tabBarInactiveBackgroundColor}=focusedOptions;const dimensions=useSafeAreaFrame();const isKeyboardShown=useIsKeyboardShown();const onHeightChange=React.useContext(BottomTabBarHeightCallbackContext);const shouldShowTabBar=!(tabBarHideOnKeyboard&&isKeyboardShown);const visibilityAnimationConfigRef=React.useRef(tabBarVisibilityAnimationConfig);React.useEffect(()=>{visibilityAnimationConfigRef.current=tabBarVisibilityAnimationConfig;});const[isTabBarHidden,setIsTabBarHidden]=React.useState(!shouldShowTabBar);const[visible]=React.useState(()=>new Animated.Value(shouldShowTabBar?1:0));React.useEffect(()=>{const visibilityAnimationConfig=visibilityAnimationConfigRef.current;if(shouldShowTabBar){var _visibilityAnimationC,_visibilityAnimationC2;const animation=(visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC=visibilityAnimationConfig.show)===null||_visibilityAnimationC===void 0?void 0:_visibilityAnimationC.animation)==='spring'?Animated.spring:Animated.timing;animation(visible,Object.assign({toValue:1,useNativeDriver,duration:250},visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC2=visibilityAnimationConfig.show)===null||_visibilityAnimationC2===void 0?void 0:_visibilityAnimationC2.config)).start(_ref4=>{let{finished}=_ref4;if(finished){setIsTabBarHidden(false);}});}else{var _visibilityAnimationC3,_visibilityAnimationC4;setIsTabBarHidden(true);const animation=(visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC3=visibilityAnimationConfig.hide)===null||_visibilityAnimationC3===void 0?void 0:_visibilityAnimationC3.animation)==='spring'?Animated.spring:Animated.timing;animation(visible,Object.assign({toValue:0,useNativeDriver,duration:200},visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC4=visibilityAnimationConfig.hide)===null||_visibilityAnimationC4===void 0?void 0:_visibilityAnimationC4.config)).start();}return()=>visible.stopAnimation();},[visible,shouldShowTabBar]);const[layout,setLayout]=React.useState({height:0,width:dimensions.width});const handleLayout=e=>{const{height,width}=e.nativeEvent.layout;onHeightChange===null||onHeightChange===void 0?void 0:onHeightChange(height);setLayout(layout=>{if(height===layout.height&&width===layout.width){return layout;}else{return{height,width};}});};const{routes}=state;const paddingBottom=getPaddingBottom(insets);const tabBarHeight=getTabBarHeight({state,descriptors,insets,dimensions,layout,style:[tabBarStyle,style]});const hasHorizontalLabels=shouldUseHorizontalLabels({state,descriptors,dimensions,layout});const tabBarBackgroundElement=tabBarBackground===null||tabBarBackground===void 0?void 0:tabBarBackground();return React.createElement(Animated.View,{style:[styles.tabBar,{backgroundColor:tabBarBackgroundElement!=null?'transparent':colors.card,borderTopColor:colors.border},{transform:[{translateY:visible.interpolate({inputRange:[0,1],outputRange:[layout.height+paddingBottom+StyleSheet.hairlineWidth,0]})}],position:isTabBarHidden?'absolute':null},{height:tabBarHeight,paddingBottom,paddingHorizontal:Math.max(insets.left,insets.right)},tabBarStyle],pointerEvents:isTabBarHidden?'none':'auto',onLayout:handleLayout},React.createElement(View,{pointerEvents:\"none\",style:StyleSheet.absoluteFill},tabBarBackgroundElement),React.createElement(View,{accessibilityRole:\"tablist\",style:styles.content},routes.map((route,index)=>{const focused=index===state.index;const{options}=descriptors[route.key];const onPress=()=>{const event=navigation.emit({type:'tabPress',target:route.key,canPreventDefault:true});if(!focused&&!event.defaultPrevented){navigation.dispatch(Object.assign({},CommonActions.navigate({name:route.name,merge:true}),{target:state.key}));}};const onLongPress=()=>{navigation.emit({type:'tabLongPress',target:route.key});};const label=options.tabBarLabel!==undefined?options.tabBarLabel:options.title!==undefined?options.title:route.name;const accessibilityLabel=options.tabBarAccessibilityLabel!==undefined?options.tabBarAccessibilityLabel:typeof label==='string'&&false?`${label}, tab, ${index+1} of ${routes.length}`:undefined;return React.createElement(NavigationContext.Provider,{key:route.key,value:descriptors[route.key].navigation},React.createElement(NavigationRouteContext.Provider,{value:route},React.createElement(BottomTabItem,{route:route,descriptor:descriptors[route.key],focused:focused,horizontal:hasHorizontalLabels,onPress:onPress,onLongPress:onLongPress,accessibilityLabel:accessibilityLabel,to:buildLink(route.name,route.params),testID:options.tabBarTestID,allowFontScaling:options.tabBarAllowFontScaling,activeTintColor:tabBarActiveTintColor,inactiveTintColor:tabBarInactiveTintColor,activeBackgroundColor:tabBarActiveBackgroundColor,inactiveBackgroundColor:tabBarInactiveBackgroundColor,button:options.tabBarButton,icon:options.tabBarIcon??(_ref5=>{let{color,size}=_ref5;return React.createElement(MissingIcon,{color:color,size:size});}),badge:options.tabBarBadge,badgeStyle:options.tabBarBadgeStyle,label:label,showLabel:tabBarShowLabel,labelStyle:options.tabBarLabelStyle,iconStyle:options.tabBarIconStyle,style:options.tabBarItemStyle})));})));}const styles=StyleSheet.create({tabBar:{left:0,right:0,bottom:0,borderTopWidth:StyleSheet.hairlineWidth,elevation:8},content:{flex:1,flexDirection:'row'}});","map":{"version":3,"names":["MissingIcon","CommonActions","NavigationContext","NavigationRouteContext","useLinkBuilder","useTheme","React","Animated","Platform","StyleSheet","View","useSafeAreaFrame","BottomTabBarHeightCallbackContext","useIsKeyboardShown","BottomTabItem","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","shouldUseHorizontalLabels","_ref","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","getTabBarHeight","_ref2","_StyleSheet$flatten","style","rest","_objectWithoutPropertiesLoose","_excluded","customHeight","isLandscape","horizontalLabels","Object","assign","paddingBottom","isPad","BottomTabBar","_ref3","navigation","colors","buildLink","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Value","visibilityAnimationConfig","_visibilityAnimationC","_visibilityAnimationC2","animation","show","spring","timing","toValue","duration","config","start","_ref4","finished","_visibilityAnimationC3","_visibilityAnimationC4","hide","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","createElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","pointerEvents","onLayout","absoluteFill","accessibilityRole","content","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","Provider","value","descriptor","horizontal","to","params","testID","tabBarTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","_ref5","color","size","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["/Users/jamescunningham/Desktop/safepath-sf/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabBar.tsx"],"sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  descriptor={descriptors[route.key]}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}