{"ast":null,"code":"import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";export default function useIsKeyboardShown(){const[isKeyboardShown,setIsKeyboardShown]=React.useState(false);React.useEffect(()=>{const handleKeyboardShow=()=>setIsKeyboardShown(true);const handleKeyboardHide=()=>setIsKeyboardShown(false);let subscriptions;if(false){subscriptions=[Keyboard.addListener('keyboardWillShow',handleKeyboardShow),Keyboard.addListener('keyboardWillHide',handleKeyboardHide)];}else{subscriptions=[Keyboard.addListener('keyboardDidShow',handleKeyboardShow),Keyboard.addListener('keyboardDidHide',handleKeyboardHide)];}return()=>{subscriptions.forEach(s=>s.remove());};},[]);return isKeyboardShown;}","map":{"version":3,"names":["React","Keyboard","Platform","useIsKeyboardShown","isKeyboardShown","setIsKeyboardShown","useState","useEffect","handleKeyboardShow","handleKeyboardHide","subscriptions","addListener","forEach","s","remove"],"sources":["/Users/jamescunningham/Desktop/safepath-sf/node_modules/@react-navigation/bottom-tabs/src/utils/useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { EmitterSubscription, Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions: EmitterSubscription[];\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [\n        Keyboard.addListener('keyboardWillShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardWillHide', handleKeyboardHide),\n      ];\n    } else {\n      subscriptions = [\n        Keyboard.addListener('keyboardDidShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardDidHide', handleKeyboardHide),\n      ];\n    }\n\n    return () => {\n      subscriptions.forEach((s) => s.remove());\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,QAAA,8CAG9B,cAAe,SAAS,CAAAC,kBAAkBA,CAAA,CAAG,CAC3C,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGL,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC,CAEnEN,KAAK,CAACO,SAAS,CAAC,IAAM,CACpB,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAMH,kBAAkB,CAAC,IAAI,CAAC,CACzD,KAAM,CAAAI,kBAAkB,CAAGA,CAAA,GAAMJ,kBAAkB,CAAC,KAAK,CAAC,CAE1D,GAAI,CAAAK,aAAoC,CAExC,SAA2B,CACzBA,aAAa,CAAG,CACdT,QAAQ,CAACU,WAAW,CAAC,kBAAkB,CAAEH,kBAAkB,CAAC,CAC5DP,QAAQ,CAACU,WAAW,CAAC,kBAAkB,CAAEF,kBAAkB,CAAC,CAC7D,CACH,CAAC,IAAM,CACLC,aAAa,CAAG,CACdT,QAAQ,CAACU,WAAW,CAAC,iBAAiB,CAAEH,kBAAkB,CAAC,CAC3DP,QAAQ,CAACU,WAAW,CAAC,iBAAiB,CAAEF,kBAAkB,CAAC,CAC5D,CACH,CAEA,MAAO,IAAM,CACXC,aAAa,CAACE,OAAO,CAAEC,CAAC,EAAKA,CAAC,CAACC,MAAM,EAAE,CAAC,CAC1C,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAV,eAAe,CACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}