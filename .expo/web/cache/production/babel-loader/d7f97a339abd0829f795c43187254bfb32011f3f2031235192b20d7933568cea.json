{"ast":null,"code":"import ExpoLocation from'./ExpoLocation';import{LocationEventEmitter}from'./LocationEventEmitter';let nextWatchId=0;class Subscriber{callbacks={};eventSubscription=null;constructor(eventName,eventDataField){this.eventName=eventName;this.eventDataField=eventDataField;}maybeInitializeSubscription(){if(this.eventSubscription){return;}this.eventSubscription=LocationEventEmitter.addListener(this.eventName,event=>this.trigger(event));}registerCallback(callback){this.maybeInitializeSubscription();const id=++nextWatchId;this.callbacks[id]=callback;return id;}unregisterCallback(id){if(!this.callbacks[id]){return;}delete this.callbacks[id];ExpoLocation.removeWatchAsync(id);if(Object.keys(this.callbacks).length===0&&this.eventSubscription){LocationEventEmitter.removeSubscription(this.eventSubscription);this.eventSubscription=null;}}trigger(event){const watchId=event.watchId;const callback=this.callbacks[watchId];if(callback){callback(event[this.eventDataField]);}else{ExpoLocation.removeWatchAsync(watchId);}}}export const LocationSubscriber=new Subscriber('Expo.locationChanged','location');export const HeadingSubscriber=new Subscriber('Expo.headingChanged','heading');export function _getCurrentWatchId(){return nextWatchId;}","map":{"version":3,"names":["ExpoLocation","LocationEventEmitter","nextWatchId","Subscriber","callbacks","eventSubscription","constructor","eventName","eventDataField","maybeInitializeSubscription","addListener","event","trigger","registerCallback","callback","id","unregisterCallback","removeWatchAsync","Object","keys","length","removeSubscription","watchId","LocationSubscriber","HeadingSubscriber","_getCurrentWatchId"],"sources":["/Users/jamescunningham/Desktop/safepath-sf/node_modules/expo-location/src/LocationSubscribers.ts"],"sourcesContent":["import { Subscription } from 'expo-modules-core';\n\nimport ExpoLocation from './ExpoLocation';\nimport { LocationCallback, LocationHeadingCallback } from './Location.types';\nimport { LocationEventEmitter } from './LocationEventEmitter';\n\ntype EventObject = {\n  watchId: number;\n  [key: string]: any;\n};\n\nlet nextWatchId = 0;\n\nclass Subscriber<CallbackType extends LocationCallback | LocationHeadingCallback> {\n  private eventName: string;\n  private eventDataField: string;\n  private callbacks: { [id: string]: CallbackType } = {};\n  private eventSubscription: Subscription | null = null;\n\n  constructor(eventName: string, eventDataField: string) {\n    this.eventName = eventName;\n    this.eventDataField = eventDataField;\n  }\n\n  maybeInitializeSubscription() {\n    if (this.eventSubscription) {\n      return;\n    }\n    this.eventSubscription = LocationEventEmitter.addListener(\n      this.eventName,\n      (event: EventObject) => this.trigger(event)\n    );\n  }\n\n  /**\n   * Registers given callback under new id which is then returned.\n   */\n  registerCallback(callback: CallbackType): number {\n    this.maybeInitializeSubscription();\n    const id = ++nextWatchId;\n    this.callbacks[id] = callback;\n    return id;\n  }\n\n  /**\n   * Unregisters a callback with given id and revokes the subscription if possible.\n   */\n  unregisterCallback(id: number): void {\n    // Do nothing if we have already unregistered the callback.\n    if (!this.callbacks[id]) {\n      return;\n    }\n\n    delete this.callbacks[id];\n    ExpoLocation.removeWatchAsync(id);\n\n    if (Object.keys(this.callbacks).length === 0 && this.eventSubscription) {\n      LocationEventEmitter.removeSubscription(this.eventSubscription);\n      this.eventSubscription = null;\n    }\n  }\n\n  trigger(event: EventObject): void {\n    const watchId = event.watchId;\n    const callback = this.callbacks[watchId];\n\n    if (callback) {\n      callback(event[this.eventDataField]);\n    } else {\n      ExpoLocation.removeWatchAsync(watchId);\n    }\n  }\n}\n\nexport const LocationSubscriber = new Subscriber<LocationCallback>(\n  'Expo.locationChanged',\n  'location'\n);\nexport const HeadingSubscriber = new Subscriber<LocationHeadingCallback>(\n  'Expo.headingChanged',\n  'heading'\n);\n\n/**\n * @private Necessary for some unit tests.\n */\nexport function _getCurrentWatchId(): number {\n  return nextWatchId;\n}\n"],"mappings":"AAEA,MAAO,CAAAA,YAAY,KAAM,gBAAgB,CAEzC,OAASC,oBAAoB,KAAQ,wBAAwB,CAO7D,GAAI,CAAAC,WAAW,CAAG,CAAC,CAEnB,KAAM,CAAAC,UAAU,CAGNC,SAAS,CAAmC,EAAE,CAC9CC,iBAAiB,CAAwB,IAAI,CAErDC,YAAYC,SAAiB,CAAEC,cAAsB,EACnD,IAAI,CAACD,SAAS,CAAGA,SAAS,CAC1B,IAAI,CAACC,cAAc,CAAGA,cAAc,CACtC,CAEAC,2BAA2BA,CAAA,EACzB,GAAI,IAAI,CAACJ,iBAAiB,CAAE,CAC1B,O,CAEF,IAAI,CAACA,iBAAiB,CAAGJ,oBAAoB,CAACS,WAAW,CACvD,IAAI,CAACH,SAAS,CACbI,KAAkB,EAAK,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC,CAC5C,CACH,CAKAE,gBAAgBA,CAACC,QAAsB,EACrC,IAAI,CAACL,2BAA2B,EAAE,CAClC,KAAM,CAAAM,EAAE,CAAG,EAAEb,WAAW,CACxB,IAAI,CAACE,SAAS,CAACW,EAAE,CAAC,CAAGD,QAAQ,CAC7B,MAAO,CAAAC,EAAE,CACX,CAKAC,kBAAkBA,CAACD,EAAU,EAE3B,GAAI,CAAC,IAAI,CAACX,SAAS,CAACW,EAAE,CAAC,CAAE,CACvB,O,CAGF,MAAO,KAAI,CAACX,SAAS,CAACW,EAAE,CAAC,CACzBf,YAAY,CAACiB,gBAAgB,CAACF,EAAE,CAAC,CAEjC,GAAIG,MAAM,CAACC,IAAI,CAAC,IAAI,CAACf,SAAS,CAAC,CAACgB,MAAM,GAAK,CAAC,EAAI,IAAI,CAACf,iBAAiB,CAAE,CACtEJ,oBAAoB,CAACoB,kBAAkB,CAAC,IAAI,CAAChB,iBAAiB,CAAC,CAC/D,IAAI,CAACA,iBAAiB,CAAG,IAAI,C,CAEjC,CAEAO,OAAOA,CAACD,KAAkB,EACxB,KAAM,CAAAW,OAAO,CAAGX,KAAK,CAACW,OAAO,CAC7B,KAAM,CAAAR,QAAQ,CAAG,IAAI,CAACV,SAAS,CAACkB,OAAO,CAAC,CAExC,GAAIR,QAAQ,CAAE,CACZA,QAAQ,CAACH,KAAK,CAAC,IAAI,CAACH,cAAc,CAAC,CAAC,C,CACrC,IAAM,CACLR,YAAY,CAACiB,gBAAgB,CAACK,OAAO,CAAC,C,CAE1C,C,CAGF,MAAO,MAAM,CAAAC,kBAAkB,CAAG,GAAI,CAAApB,UAAU,CAC9C,sBAAsB,CACtB,UAAU,CACX,CACD,MAAO,MAAM,CAAAqB,iBAAiB,CAAG,GAAI,CAAArB,UAAU,CAC7C,qBAAqB,CACrB,SAAS,CACV,CAKD,MAAM,SAAU,CAAAsB,kBAAkBA,CAAA,EAChC,MAAO,CAAAvB,WAAW,CACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}