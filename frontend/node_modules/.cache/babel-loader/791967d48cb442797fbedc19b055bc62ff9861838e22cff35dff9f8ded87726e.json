{"ast":null,"code":"const STORAGE_KEY = \"safepath_saved_locations\";\n\n/**\r\n * Get all saved locations from localStorage\r\n */\nexport function getSavedLocations() {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    if (!stored) return [];\n    return JSON.parse(stored);\n  } catch (error) {\n    console.error(\"Error reading saved locations:\", error);\n    return [];\n  }\n}\n\n/**\r\n * Save a new location\r\n */\nexport function saveLocation(address, name) {\n  const locations = getSavedLocations();\n\n  // Check if location already exists\n  const existing = locations.find(loc => loc.address.toLowerCase() === address.toLowerCase());\n  if (existing) {\n    return existing;\n  }\n  const newLocation = {\n    id: Date.now().toString(),\n    name: name || address,\n    address: address,\n    timestamp: Date.now()\n  };\n  locations.unshift(newLocation); // Add to beginning\n\n  // Keep only last 20 locations\n  const limitedLocations = locations.slice(0, 20);\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(limitedLocations));\n  } catch (error) {\n    console.error(\"Error saving location:\", error);\n  }\n  return newLocation;\n}\n\n/**\r\n * Delete a saved location\r\n */\nexport function deleteLocation(id) {\n  const locations = getSavedLocations();\n  const filtered = locations.filter(loc => loc.id !== id);\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(filtered));\n  } catch (error) {\n    console.error(\"Error deleting location:\", error);\n  }\n}\n\n/**\r\n * Search saved locations by query\r\n */\nexport function searchLocations(query) {\n  if (!query.trim()) return [];\n  const locations = getSavedLocations();\n  const lowerQuery = query.toLowerCase();\n  return locations.filter(loc => loc.name.toLowerCase().includes(lowerQuery) || loc.address.toLowerCase().includes(lowerQuery));\n}","map":{"version":3,"names":["STORAGE_KEY","getSavedLocations","stored","localStorage","getItem","JSON","parse","error","console","saveLocation","address","name","locations","existing","find","loc","toLowerCase","newLocation","id","Date","now","toString","timestamp","unshift","limitedLocations","slice","setItem","stringify","deleteLocation","filtered","filter","searchLocations","query","trim","lowerQuery","includes"],"sources":["C:/Users/natha/AWS_Hackathon2025/frontend/src/services/savedLocations.ts"],"sourcesContent":["export interface SavedLocation {\r\n  id: string\r\n  name: string\r\n  address: string\r\n  timestamp: number\r\n}\r\n\r\nconst STORAGE_KEY = \"safepath_saved_locations\"\r\n\r\n/**\r\n * Get all saved locations from localStorage\r\n */\r\nexport function getSavedLocations(): SavedLocation[] {\r\n  try {\r\n    const stored = localStorage.getItem(STORAGE_KEY)\r\n    if (!stored) return []\r\n    return JSON.parse(stored)\r\n  } catch (error) {\r\n    console.error(\"Error reading saved locations:\", error)\r\n    return []\r\n  }\r\n}\r\n\r\n/**\r\n * Save a new location\r\n */\r\nexport function saveLocation(address: string, name?: string): SavedLocation {\r\n  const locations = getSavedLocations()\r\n\r\n  // Check if location already exists\r\n  const existing = locations.find((loc) => loc.address.toLowerCase() === address.toLowerCase())\r\n  if (existing) {\r\n    return existing\r\n  }\r\n\r\n  const newLocation: SavedLocation = {\r\n    id: Date.now().toString(),\r\n    name: name || address,\r\n    address: address,\r\n    timestamp: Date.now(),\r\n  }\r\n\r\n  locations.unshift(newLocation) // Add to beginning\r\n\r\n  // Keep only last 20 locations\r\n  const limitedLocations = locations.slice(0, 20)\r\n\r\n  try {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(limitedLocations))\r\n  } catch (error) {\r\n    console.error(\"Error saving location:\", error)\r\n  }\r\n\r\n  return newLocation\r\n}\r\n\r\n/**\r\n * Delete a saved location\r\n */\r\nexport function deleteLocation(id: string): void {\r\n  const locations = getSavedLocations()\r\n  const filtered = locations.filter((loc) => loc.id !== id)\r\n\r\n  try {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(filtered))\r\n  } catch (error) {\r\n    console.error(\"Error deleting location:\", error)\r\n  }\r\n}\r\n\r\n/**\r\n * Search saved locations by query\r\n */\r\nexport function searchLocations(query: string): SavedLocation[] {\r\n  if (!query.trim()) return []\r\n\r\n  const locations = getSavedLocations()\r\n  const lowerQuery = query.toLowerCase()\r\n\r\n  return locations.filter(\r\n    (loc) =>\r\n      loc.name.toLowerCase().includes(lowerQuery) || loc.address.toLowerCase().includes(lowerQuery)\r\n  )\r\n}\r\n"],"mappings":"AAOA,MAAMA,WAAW,GAAG,0BAA0B;;AAE9C;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAAA,EAAoB;EACnD,IAAI;IACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAC;IAChD,IAAI,CAACE,MAAM,EAAE,OAAO,EAAE;IACtB,OAAOG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;EAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,EAAE;EACX;AACF;;AAEA;AACA;AACA;AACA,OAAO,SAASE,YAAYA,CAACC,OAAe,EAAEC,IAAa,EAAiB;EAC1E,MAAMC,SAAS,GAAGX,iBAAiB,CAAC,CAAC;;EAErC;EACA,MAAMY,QAAQ,GAAGD,SAAS,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACL,OAAO,CAACM,WAAW,CAAC,CAAC,KAAKN,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC;EAC7F,IAAIH,QAAQ,EAAE;IACZ,OAAOA,QAAQ;EACjB;EAEA,MAAMI,WAA0B,GAAG;IACjCC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACzBV,IAAI,EAAEA,IAAI,IAAID,OAAO;IACrBA,OAAO,EAAEA,OAAO;IAChBY,SAAS,EAAEH,IAAI,CAACC,GAAG,CAAC;EACtB,CAAC;EAEDR,SAAS,CAACW,OAAO,CAACN,WAAW,CAAC,EAAC;;EAE/B;EACA,MAAMO,gBAAgB,GAAGZ,SAAS,CAACa,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAE/C,IAAI;IACFtB,YAAY,CAACuB,OAAO,CAAC1B,WAAW,EAAEK,IAAI,CAACsB,SAAS,CAACH,gBAAgB,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD;EAEA,OAAOU,WAAW;AACpB;;AAEA;AACA;AACA;AACA,OAAO,SAASW,cAAcA,CAACV,EAAU,EAAQ;EAC/C,MAAMN,SAAS,GAAGX,iBAAiB,CAAC,CAAC;EACrC,MAAM4B,QAAQ,GAAGjB,SAAS,CAACkB,MAAM,CAAEf,GAAG,IAAKA,GAAG,CAACG,EAAE,KAAKA,EAAE,CAAC;EAEzD,IAAI;IACFf,YAAY,CAACuB,OAAO,CAAC1B,WAAW,EAAEK,IAAI,CAACsB,SAAS,CAACE,QAAQ,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOtB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD;AACF;;AAEA;AACA;AACA;AACA,OAAO,SAASwB,eAAeA,CAACC,KAAa,EAAmB;EAC9D,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE;EAE5B,MAAMrB,SAAS,GAAGX,iBAAiB,CAAC,CAAC;EACrC,MAAMiC,UAAU,GAAGF,KAAK,CAAChB,WAAW,CAAC,CAAC;EAEtC,OAAOJ,SAAS,CAACkB,MAAM,CACpBf,GAAG,IACFA,GAAG,CAACJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAACmB,QAAQ,CAACD,UAAU,CAAC,IAAInB,GAAG,CAACL,OAAO,CAACM,WAAW,CAAC,CAAC,CAACmB,QAAQ,CAACD,UAAU,CAChG,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}