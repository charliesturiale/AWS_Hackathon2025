{"ast":null,"code":"const STORAGE_KEY=\"safepath_saved_locations\";/**\n * Get all saved locations from localStorage\n */export function getSavedLocations(){try{const stored=localStorage.getItem(STORAGE_KEY);if(!stored)return[];return JSON.parse(stored);}catch(error){console.error(\"Error reading saved locations:\",error);return[];}}/**\n * Save a new location\n */export function saveLocation(address,name){const locations=getSavedLocations();// Check if location already exists\nconst existing=locations.find(loc=>loc.address.toLowerCase()===address.toLowerCase());if(existing){return existing;}const newLocation={id:Date.now().toString(),name:name||address,address:address,timestamp:Date.now()};locations.unshift(newLocation);// Add to beginning\n// Keep only last 20 locations\nconst limitedLocations=locations.slice(0,20);try{localStorage.setItem(STORAGE_KEY,JSON.stringify(limitedLocations));}catch(error){console.error(\"Error saving location:\",error);}return newLocation;}/**\n * Delete a saved location\n */export function deleteLocation(id){const locations=getSavedLocations();const filtered=locations.filter(loc=>loc.id!==id);try{localStorage.setItem(STORAGE_KEY,JSON.stringify(filtered));}catch(error){console.error(\"Error deleting location:\",error);}}/**\n * Search saved locations by query\n */export function searchLocations(query){if(!query.trim())return[];const locations=getSavedLocations();const lowerQuery=query.toLowerCase();return locations.filter(loc=>loc.name.toLowerCase().includes(lowerQuery)||loc.address.toLowerCase().includes(lowerQuery));}","map":{"version":3,"names":["STORAGE_KEY","getSavedLocations","stored","localStorage","getItem","JSON","parse","error","console","saveLocation","address","name","locations","existing","find","loc","toLowerCase","newLocation","id","Date","now","toString","timestamp","unshift","limitedLocations","slice","setItem","stringify","deleteLocation","filtered","filter","searchLocations","query","trim","lowerQuery","includes"],"sources":["/Users/jamescunningham/Desktop/safepath-sf/src/services/savedLocations.ts"],"sourcesContent":["export interface SavedLocation {\n  id: string\n  name: string\n  address: string\n  timestamp: number\n}\n\nconst STORAGE_KEY = \"safepath_saved_locations\"\n\n/**\n * Get all saved locations from localStorage\n */\nexport function getSavedLocations(): SavedLocation[] {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY)\n    if (!stored) return []\n    return JSON.parse(stored)\n  } catch (error) {\n    console.error(\"Error reading saved locations:\", error)\n    return []\n  }\n}\n\n/**\n * Save a new location\n */\nexport function saveLocation(address: string, name?: string): SavedLocation {\n  const locations = getSavedLocations()\n\n  // Check if location already exists\n  const existing = locations.find((loc) => loc.address.toLowerCase() === address.toLowerCase())\n  if (existing) {\n    return existing\n  }\n\n  const newLocation: SavedLocation = {\n    id: Date.now().toString(),\n    name: name || address,\n    address: address,\n    timestamp: Date.now(),\n  }\n\n  locations.unshift(newLocation) // Add to beginning\n\n  // Keep only last 20 locations\n  const limitedLocations = locations.slice(0, 20)\n\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(limitedLocations))\n  } catch (error) {\n    console.error(\"Error saving location:\", error)\n  }\n\n  return newLocation\n}\n\n/**\n * Delete a saved location\n */\nexport function deleteLocation(id: string): void {\n  const locations = getSavedLocations()\n  const filtered = locations.filter((loc) => loc.id !== id)\n\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(filtered))\n  } catch (error) {\n    console.error(\"Error deleting location:\", error)\n  }\n}\n\n/**\n * Search saved locations by query\n */\nexport function searchLocations(query: string): SavedLocation[] {\n  if (!query.trim()) return []\n\n  const locations = getSavedLocations()\n  const lowerQuery = query.toLowerCase()\n\n  return locations.filter(\n    (loc) =>\n      loc.name.toLowerCase().includes(lowerQuery) || loc.address.toLowerCase().includes(lowerQuery)\n  )\n}\n"],"mappings":"AAOA,KAAM,CAAAA,WAAW,CAAG,0BAA0B,CAE9C;AACA;AACA,GACA,MAAO,SAAS,CAAAC,iBAAiBA,CAAA,CAAoB,CACnD,GAAI,CACF,KAAM,CAAAC,MAAM,CAAGC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAC,CAChD,GAAI,CAACE,MAAM,CAAE,MAAO,EAAE,CACtB,MAAO,CAAAG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAC3B,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,MAAO,EAAE,CACX,CACF,CAEA;AACA;AACA,GACA,MAAO,SAAS,CAAAE,YAAYA,CAACC,OAAe,CAAEC,IAAa,CAAiB,CAC1E,KAAM,CAAAC,SAAS,CAAGX,iBAAiB,CAAC,CAAC,CAErC;AACA,KAAM,CAAAY,QAAQ,CAAGD,SAAS,CAACE,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACL,OAAO,CAACM,WAAW,CAAC,CAAC,GAAKN,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC,CAC7F,GAAIH,QAAQ,CAAE,CACZ,MAAO,CAAAA,QAAQ,CACjB,CAEA,KAAM,CAAAI,WAA0B,CAAG,CACjCC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACzBV,IAAI,CAAEA,IAAI,EAAID,OAAO,CACrBA,OAAO,CAAEA,OAAO,CAChBY,SAAS,CAAEH,IAAI,CAACC,GAAG,CAAC,CACtB,CAAC,CAEDR,SAAS,CAACW,OAAO,CAACN,WAAW,CAAC,CAAC;AAE/B;AACA,KAAM,CAAAO,gBAAgB,CAAGZ,SAAS,CAACa,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAE/C,GAAI,CACFtB,YAAY,CAACuB,OAAO,CAAC1B,WAAW,CAAEK,IAAI,CAACsB,SAAS,CAACH,gBAAgB,CAAC,CAAC,CACrE,CAAE,MAAOjB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CAEA,MAAO,CAAAU,WAAW,CACpB,CAEA;AACA;AACA,GACA,MAAO,SAAS,CAAAW,cAAcA,CAACV,EAAU,CAAQ,CAC/C,KAAM,CAAAN,SAAS,CAAGX,iBAAiB,CAAC,CAAC,CACrC,KAAM,CAAA4B,QAAQ,CAAGjB,SAAS,CAACkB,MAAM,CAAEf,GAAG,EAAKA,GAAG,CAACG,EAAE,GAAKA,EAAE,CAAC,CAEzD,GAAI,CACFf,YAAY,CAACuB,OAAO,CAAC1B,WAAW,CAAEK,IAAI,CAACsB,SAAS,CAACE,QAAQ,CAAC,CAAC,CAC7D,CAAE,MAAOtB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CACF,CAEA;AACA;AACA,GACA,MAAO,SAAS,CAAAwB,eAAeA,CAACC,KAAa,CAAmB,CAC9D,GAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAE,MAAO,EAAE,CAE5B,KAAM,CAAArB,SAAS,CAAGX,iBAAiB,CAAC,CAAC,CACrC,KAAM,CAAAiC,UAAU,CAAGF,KAAK,CAAChB,WAAW,CAAC,CAAC,CAEtC,MAAO,CAAAJ,SAAS,CAACkB,MAAM,CACpBf,GAAG,EACFA,GAAG,CAACJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAACmB,QAAQ,CAACD,UAAU,CAAC,EAAInB,GAAG,CAACL,OAAO,CAACM,WAAW,CAAC,CAAC,CAACmB,QAAQ,CAACD,UAAU,CAChG,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}